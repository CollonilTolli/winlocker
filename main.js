const { app, BrowserWindow, globalShortcut, ipcMain, screen, dialog } = require('electron');
const path = require('path');
const AutoLaunch = require('auto-launch');
const fs = require('fs');
const { exec, spawn } = require('child_process');
const os = require('os');

let windows = [];
let mainWindow = null; // –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const correctPassword = 'unlock123'; // –ü–∞—Ä–æ–ª—å –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
let isTemporarilyHidden = false;
let taskManagerMonitor = null; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á
let taskbarHidden = false; // –§–ª–∞–≥ —Å–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ –∑–∞–¥–∞—á

// –£–¥–∞–ª–µ–Ω –º–∞—Ä–∫–µ—Ä –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ - —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–æ–º

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function isRunningAsAdmin() {
  try {
    // –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Å–∏—Å—Ç–µ–º–Ω—É—é –ø–∞–ø–∫—É
    const testFile = path.join(process.env.WINDIR, 'temp', 'admin-test.tmp');
    fs.writeFileSync(testFile, 'test');
    fs.unlinkSync(testFile);
    return true;
  } catch (error) {
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function restartAsAdmin() {
  const { spawn } = require('child_process');
  const exePath = process.execPath;
  
  // –ó–∞–ø—É—Å–∫ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ PowerShell
  const psCommand = `Start-Process -FilePath "${exePath}" -Verb RunAs`;
  exec(`powershell -Command "${psCommand}"`, (error) => {
    if (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
    }
    app.quit();
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–≤–∏–¥–∏–º–æ–≥–æ –æ–∫–Ω–∞-–ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫–∞
function createInterceptorWindow() {
  const interceptor = new BrowserWindow({
    width: 1,
    height: 1,
    x: -10,
    y: -10,
    show: false,
    frame: false,
    transparent: true,
    alwaysOnTop: true,
    skipTaskbar: true,
    focusable: false,
    webPreferences: {
      nodeIntegration: false,
      contextIsolation: true
    }
  });
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  interceptor.loadURL('data:text/html,<html><body></body></html>');
  
  // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–º —É—Ä–æ–≤–Ω–µ
  interceptor.webContents.on('before-input-event', (event, input) => {
    // –ë–ª–æ–∫–∏—Ä—É–µ–º Ctrl+Alt+Del –∏ –¥—Ä—É–≥–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
    if (input.control && input.alt && input.key.toLowerCase() === 'delete') {
      console.log('üö´ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù Ctrl+Alt+Del —á–µ—Ä–µ–∑ –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫');
      event.preventDefault();
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
      if (mainWindow && !mainWindow.isDestroyed()) {
        mainWindow.focus();
        mainWindow.show();
        mainWindow.moveTop();
        mainWindow.setAlwaysOnTop(true);
        setTimeout(() => mainWindow.setAlwaysOnTop(false), 100);
      }
      return;
    }
    
    if (input.control && input.shift && input.key.toLowerCase() === 'escape') {
      console.log('üö´ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù Ctrl+Shift+Esc —á–µ—Ä–µ–∑ –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫');
      event.preventDefault();
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
      if (mainWindow && !mainWindow.isDestroyed()) {
        mainWindow.focus();
        mainWindow.show();
        mainWindow.moveTop();
        mainWindow.setAlwaysOnTop(true);
        setTimeout(() => mainWindow.setAlwaysOnTop(false), 100);
      }
      return;
    }
  });
  
  return interceptor;
}
function blockCtrlAltDel() {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º PowerShell —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ SAS
  const psCommand = `Start-Process powershell -ArgumentList "-Command", "reg add 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System' /v DisableCAD /t REG_DWORD /d 1 /f" -Verb RunAs -WindowStyle Hidden`;
  
  exec(`powershell -Command "${psCommand}"`, (error, stdout, stderr) => {
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ Ctrl+Alt+Del:', error.message);
      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ –≥—Ä—É–ø–ø–æ–≤—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏
      const altCommand = `reg add "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System" /v DisableCAD /t REG_DWORD /d 1 /f`;
      exec(altCommand, (altError, altStdout, altStderr) => {
        if (altError) {
          console.error('‚ùå –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Ctrl+Alt+Del –Ω–µ —É–¥–∞–ª–∞—Å—å:', altError.message);
        } else {
          console.log('‚úÖ Ctrl+Alt+Del –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏');
        }
      });
    } else {
      console.log('‚úÖ Ctrl+Alt+Del –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏');
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ Ctrl+Alt+Del
function unblockCtrlAltDel() {
  const regCommand = `reg delete "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System" /v DisableCAD /f`;
  
  exec(regCommand, (error, stdout, stderr) => {
    if (error) {
      console.log('‚ÑπÔ∏è Ctrl+Alt+Del —É–∂–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
    } else {
      console.log('‚úÖ Ctrl+Alt+Del —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ Task Manager —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä
function blockTaskManagerRegistry() {
  const regCommand = `reg add "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System" /v DisableTaskMgr /t REG_DWORD /d 1 /f`;
  
  exec(regCommand, (error, stdout, stderr) => {
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ Task Manager —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä:', error.message);
    } else {
      console.log('‚úÖ Task Manager –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä');
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ Task Manager —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä
function unblockTaskManagerRegistry() {
  const regCommand = `reg delete "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System" /v DisableTaskMgr /f`;
  
  exec(regCommand, (error, stdout, stderr) => {
    if (error) {
      console.log('‚ÑπÔ∏è Task Manager —É–∂–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
    } else {
      console.log('‚úÖ Task Manager —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä');
    }
  });
}
// –§—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —É–¥–∞–ª–µ–Ω—ã - —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–æ–º

// –§—É–Ω–∫—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–∫—Ä—ã—Ç–∏—è –æ–∫–æ–Ω
function temporarilyHideWindows() {
  if (isTemporarilyHidden) return;
  
  isTemporarilyHidden = true;
  windows.forEach(window => {
    if (window && !window.isDestroyed()) {
      window.hide();
    }
  });
  
  // –ü–æ–∫–∞–∑–∞—Ç—å –æ–∫–Ω–∞ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
  setTimeout(() => {
    showWindows();
  }, 30000);
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –æ–∫–æ–Ω
function showWindows() {
    // –°–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –∑–∞–¥–∞—á
  hideTaskbar();
  isTemporarilyHidden = false;
  windows.forEach(window => {
    if (window && !window.isDestroyed()) {
      window.show();
      window.focus();
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á
function closeTaskManager() {
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
  exec('taskkill /F /IM Taskmgr.exe', (error, stdout, stderr) => {
    if (!error) {
      console.log('–î–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á –∑–∞–∫—Ä—ã—Ç —á–µ—Ä–µ–∑ taskkill');
    }
  });
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ WMI
  exec('wmic process where name="Taskmgr.exe" delete', (error, stdout, stderr) => {
    if (!error && stdout.includes('deleted successfully')) {
      console.log('–î–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á –∑–∞–∫—Ä—ã—Ç —á–µ—Ä–µ–∑ WMI');
    }
  });
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É
  exec('taskkill /F /FI "WINDOWTITLE eq Task Manager*"', (error, stdout, stderr) => {
    if (!error) {
      console.log('–û–∫–Ω–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á –∑–∞–∫—Ä—ã—Ç—ã –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É');
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á
function startTaskManagerMonitoring() {
  if (taskManagerMonitor) {
    clearInterval(taskManagerMonitor);
  }
  
  console.log('–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á...');
  taskManagerMonitor = setInterval(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á
    exec('tasklist /FI "IMAGENAME eq Taskmgr.exe"', (error, stdout, stderr) => {
      if (!error && stdout.includes('Taskmgr.exe')) {
        console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á - –∑–∞–∫—Ä—ã–≤–∞–µ–º...');
        closeTaskManager();
      }
    });
    
    // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã —Å –¥—Ä—É–≥–∏–º–∏ –∏–º–µ–Ω–∞–º–∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á
    exec('tasklist /FI "WINDOWTITLE eq Task Manager*"', (error, stdout, stderr) => {
      if (!error && stdout.includes('Task Manager')) {
        console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ–∫–Ω–æ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á - –∑–∞–∫—Ä—ã–≤–∞–µ–º...');
        exec('taskkill /F /IM Taskmgr.exe', (killError) => {
          if (!killError) {
            console.log('–î–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç');
          }
        });
      }
    });
  }, 500); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 500–º—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á
function stopTaskManagerMonitoring() {
  if (taskManagerMonitor) {
    clearInterval(taskManagerMonitor);
    taskManagerMonitor = null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ –∑–∞–¥–∞—á
function hideTaskbar() {
  if (taskbarHidden) return;
  
  console.log('–°–∫—Ä—ã—Ç–∏–µ –ø–∞–Ω–µ–ª–∏ –∑–∞–¥–∞—á...');
  
  // –ü—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä
  const hideScript = 'reg add "HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\StuckRects3" /v Settings /t REG_BINARY /d 30000000FEFFFFFF7AF400000300000030000000300000000000000003020000360700001E0400003607000000040000 /f; taskkill /f /im explorer.exe; Start-Sleep -Seconds 2; Start-Process explorer.exe';
  
  exec(`powershell -Command "${hideScript}"`, (error, stdout, stderr) => {
    if (error) {
      console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫—Ä—ã—Ç–∏–∏ –ø–∞–Ω–µ–ª–∏ –∑–∞–¥–∞—á:', error);
      return;
    }
    
    console.log('–ü–∞–Ω–µ–ª—å –∑–∞–¥–∞—á —Å–∫—Ä—ã—Ç–∞ —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä');
    taskbarHidden = true;
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–∞–Ω–µ–ª–∏ –∑–∞–¥–∞—á
function showTaskbar() {
  console.log('–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –∑–∞–¥–∞—á...');
  
  // –ü—Ä–æ—Å—Ç–æ–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä
  const showScript = 'reg delete "HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\StuckRects3" /v Settings /f; taskkill /f /im explorer.exe; Start-Sleep -Seconds 2; Start-Process explorer.exe';
  
  exec(`powershell -Command "${showScript}"`, (error, stdout, stderr) => {
    if (error) {
      console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞–Ω–µ–ª–∏ –∑–∞–¥–∞—á:', error);
    } else {
      console.log('–ü–∞–Ω–µ–ª—å –∑–∞–¥–∞—á –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä');
    }
    taskbarHidden = false;
  });
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
const autoLauncher = new AutoLaunch({
  name: 'CollonilTolliWinLock',
  path: app.getPath('exe')
});

// –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
async function setupAutoLaunch() {
  try {
    const isEnabled = await autoLauncher.isEnabled();
    
    if (!isEnabled) {
      await autoLauncher.enable();
      console.log('–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞');
    } else {
      console.log('–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ —É–∂–µ –≤–∫–ª—é—á–µ–Ω–∞');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
async function disableAutoLaunch() {
  try {
    const isEnabled = await autoLauncher.isEnabled();
    
    if (isEnabled) {
      await autoLauncher.disable();
      console.log('–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞');
      
      await dialog.showMessageBox(null, {
        type: 'info',
        title: '–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞',
        message: 'CollonilTolliWinLock —É–¥–∞–ª–µ–Ω –∏–∑ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏',
        detail: '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞.',
        buttons: ['OK']
      });
    } else {
      console.log('–ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω–∞');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
async function checkAutoLaunchStatus() {
  try {
    const isEnabled = await autoLauncher.isEnabled();
    return isEnabled;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏:', error);
    return false;
  }
}

function createWindows() {
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∏—Å–ø–ª–µ–∏
  const displays = screen.getAllDisplays();
  
  displays.forEach((display, index) => {
    // –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–∏—Å–ø–ª–µ—è
    const window = new BrowserWindow({
      x: display.bounds.x,
      y: display.bounds.y,
      width: display.bounds.width,
      height: display.bounds.height,
      fullscreen: true,
      frame: false,
      alwaysOnTop: true,
      kiosk: true,
      resizable: false,
      movable: false,
      minimizable: false,
      maximizable: false,
      closable: false,
      skipTaskbar: true,
      focusable: true,
      show: false, // –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ —Å–∫—Ä—ã—Ç—ã–º
      webPreferences: {
        nodeIntegration: true,
        contextIsolation: false,
        enableRemoteModule: true
      },
      webSecurity: false // –†–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ –∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω—É
    });

    // –†–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ –∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω—É
    window.webContents.session.setPermissionRequestHandler((webContents, permission, callback) => {
      if (permission === 'media' || permission === 'camera' || permission === 'microphone') {
        callback(true); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑—Ä–µ—à–∞–µ–º
      } else {
        callback(false);
      }
    });

    // –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ (–ø–µ—Ä–≤—ã–π –¥–∏—Å–ø–ª–µ–π) –∏—Å–ø–æ–ª—å–∑—É–µ—Ç index.html —Å –ø–æ–ª–µ–º –≤–≤–æ–¥–∞
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç secondary.html –±–µ–∑ –ø–æ–ª—è –≤–≤–æ–¥–∞
    if (index === 0) {
      window.loadFile('index.html');
      mainWindow = window;
    } else {
      window.loadFile('secondary.html');
    }

    // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –º–µ–Ω—é
    window.setMenu(null);
    
    windows.push(window);
    
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
    window.on('close', (event) => {
      event.preventDefault();
      return false;
    });

    // –£–º–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ - —Ä–∞–∑—Ä–µ—à–∞–µ–º –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è
    window.on('blur', () => {
      if (!isTemporarilyHidden && !window.isDestroyed() && window.isVisible()) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–µ—Ä–µ–∫–ª—é—á–∏–ª—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –¥—Ä—É–≥–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        setTimeout(() => {
          if (!window.isDestroyed() && window.isVisible()) {
            // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–Ω–æ
            const focusedWindow = BrowserWindow.getFocusedWindow();
            
            // –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞—à–µ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å
            if (!focusedWindow || !windows.includes(focusedWindow)) {
              window.focus();
              window.show();
              window.moveTop();
            }
          }
        }, 100);
      }
    });
    
    // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏
    window.on('minimize', (event) => {
      event.preventDefault();
      window.restore();
      window.focus();
    });
  });
  
  // –°–æ–∑–¥–∞–µ–º –Ω–µ–≤–∏–¥–∏–º–æ–µ –æ–∫–Ω–æ-–ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
  // const interceptor = createInterceptorWindow();
  // windows.push(interceptor);
  
  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–∫–æ–Ω
  registerGlobalShortcuts();
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  console.log('–ü–æ–∫–∞–∑ –æ–∫–æ–Ω...');
  showWindows();
  console.log('–û–∫–Ω–∞ –ø–æ–∫–∞–∑–∞–Ω—ã, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ');
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á
  startTaskManagerMonitoring();
  console.log('–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
}

function registerGlobalShortcuts() {
  console.log('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à...');
  
  // –°–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –∑–∞–¥–∞—á
  hideTaskbar();
  
  // –°–∏—Å—Ç–µ–º–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä –æ—Ç–∫–ª—é—á–µ–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ –¥–æ—Å—Ç—É–ø–∞
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —á–µ—Ä–µ–∑ globalShortcut
  // blockCtrlAltDel();
  // blockTaskManagerRegistry();

  // –û—Ç–∫–ª—é—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä
  console.log('–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä');
  console.log('‚úÖ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á –∞–∫—Ç–∏–≤–Ω–∞ —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä');
  
  // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–µ—Ä—Ü–∞–Ω–∏—è
  // startTaskManagerMonitoring();
}


// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–æ–ª—è
ipcMain.handle('check-password', (event, password) => {
  if (password === correctPassword) {
    console.log('–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –≤–≤–µ–¥–µ–Ω, —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É...');
    
    // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å - —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    globalShortcut.unregisterAll();
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á
    stopTaskManagerMonitoring();
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ —Ä–µ–µ—Å—Ç—Ä
    unblockTaskManagerRegistry();
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º Ctrl+Alt+Del
    unblockCtrlAltDel();
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –∑–∞–¥–∞—á
    showTaskbar();
    
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ–∫–Ω–∞
    windows.forEach(window => {
      if (window && !window.isDestroyed()) {
        window.destroy();
      }
    });
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    setTimeout(() => {
      app.quit();
      process.exit(0);
    }, 100);
    
    return true;
  }
  return false;
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤

ipcMain.on('save-video-file', (event, data) => {
    try {
        const downloadsPath = path.join(os.homedir(), 'Downloads');
        const filePath = path.join(downloadsPath, data.filename);
        
        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º ArrayBuffer –≤ Buffer
        const buffer = Buffer.from(data.buffer);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        fs.writeFileSync(filePath, buffer);
        
        console.log(`–í–∏–¥–µ–æ—Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${filePath}`);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞:', error);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
ipcMain.on('force-quit-app', () => {
    console.log('–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    
    // –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
    globalShortcut.unregisterAll();
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    unblockCtrlAltDel();
    unblockTaskManagerRegistry();
    showTaskbar();
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –æ–∫–Ω–∞
    BrowserWindow.getAllWindows().forEach(window => {
        if (window && !window.isDestroyed()) {
            window.destroy();
        }
    });
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Ö–æ–¥–∏–º
    app.quit();
    process.exit(0);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–æ–π
ipcMain.handle('enable-autolaunch', async () => {
  await setupAutoLaunch();
  return await checkAutoLaunchStatus();
});

ipcMain.handle('disable-autolaunch', async () => {
  await disableAutoLaunch();
  return await checkAutoLaunchStatus();
});

ipcMain.handle('check-autolaunch-status', async () => {
  return await checkAutoLaunchStatus();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏ –∑–∞–¥–∞—á
ipcMain.handle('force-restore-taskbar', () => {
  console.log('–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –∑–∞–¥–∞—á...');
  showTaskbar();
  return true;
});

// –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω –∫–æ–≥–¥–∞ Electron –∑–∞–≤–µ—Ä—à–∏—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
app.whenReady().then(async () => {
  console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É...');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  if (!isRunningAsAdmin()) {
    console.log('–¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...');
    restartAsAdmin();
    return;
  }
  
  console.log('–ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã');
  
  // –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è Defender –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–æ–º
  console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ (–∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–æ–º)');
  
  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è - –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
  console.log('–ë—ã—Å—Ç—Ä–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã...');
  
  // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
  const systemOperations = [
    blockCtrlAltDel(),
    blockTaskManagerRegistry(),
    hideTaskbar()
  ];
  
  // –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–∞ —Å—Ä–∞–∑—É –±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
  createWindows();
  console.log('–û–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
  
  // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
  registerGlobalShortcuts();
  
  // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –≤ —Ñ–æ–Ω–µ
  Promise.all(systemOperations).then(() => {
    console.log('–°–∏—Å—Ç–µ–º–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã');
  }).catch(error => {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫:', error);
  });
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∑–∞–¥–∞—á
  startTaskManagerMonitoring();
  
  // –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ-–ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫
  createInterceptorWindow();
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è
  setInterval(() => {
    console.log('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç...');
  }, 30000); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ 30 —Å–µ–∫—É–Ω–¥

  app.on('activate', function () {
    if (BrowserWindow.getAllWindows().length === 0) createWindows();
  });
});

// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app.on('window-all-closed', function () {
  // –ù–µ –≤—ã—Ö–æ–¥–∏–º –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–∞–∂–µ –µ—Å–ª–∏ –≤—Å–µ –æ–∫–Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã
  return false;
});

// –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
const gotTheLock = app.requestSingleInstanceLock();

if (!gotTheLock) {
  app.quit();
} else {
  app.on('second-instance', () => {
    windows.forEach(window => {
      if (window && !window.isDestroyed()) {
        if (window.isMinimized()) window.restore();
        window.focus();
        window.moveTop();
      }
    });
  });
}

// –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
app.on('will-quit', () => {
  stopTaskManagerMonitoring();
  globalShortcut.unregisterAll();
  
  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
  unblockCtrlAltDel();
  unblockTaskManagerRegistry();
  showTaskbar();
});